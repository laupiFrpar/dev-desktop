#!/bin/sh

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

append_to_file() {
  local file="$1"
  local text="$2"

  # Add the text in the file if it does not exist
  if ! grep -qs "^$text$" "$file"; then
    printf "\n%s\n" "$text" >> "$file"
  fi
}

brew_is_installed() {
  brew list -1 | grep -Fqx "$1"
}

tap_is_installed() {
  brew tap -1 | grep -Fqx "$1"
}

if ! test -e "$HOME/.bash_profile"; then
  touch "$HOME/.bash_profile"
fi

shell_file="$HOME/.bash_profile"

if ! test -d "$HOME/bin"; then
  mkdir "$HOME/bin"
fi

append_to_file "$shell_file" 'export PATH="$HOME/bin:$PATH"'

# Install brew
if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
  curl -fsS 'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
  append_to_file "$shell_file" 'export PATH="/usr/local/bin:$PATH"'
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

# Remove brew-cask since it is now installed as part of brew tap caskroom/cask.
# See https://github.com/caskroom/homebrew-cask/releases/tag/v0.60.0
if brew_is_installed 'brew-cask'; then
  brew uninstall --force 'brew-cask'
fi

if tap_is_installed 'caskroom/versions'; then
  brew untap caskroom/versions
fi

fancy_echo "Updating Homebrew ..."
cd "$(brew --repo)" && git fetch && git reset --hard origin/master && brew update

fancy_echo "Verifying the Homebrew installation..."
if brew doctor; then
  fancy_echo "Your Homebrew installation is good to go."
else
  fancy_echo "Your Homebrew installation reported some errors or warnings."
  echo "Review the Homebrew messages to see if any action is needed."
fi

fancy_echo "Installing formulas and casks from the Brewfile ..."
if test -e "$HOME/Brewfile"; then
  if brew bundle --file="$HOME/Brewfile"; then
    fancy_echo "All formulas and casks were installed successfully."
  else
    fancy_echo "Some formulas or casks failed to install."
    echo "This is usually due to one of the Mac apps being already installed,"
    echo "in which case, you can ignore these errors."
  fi
fi

fancy_echo 'Updating Rubygems...'
gem update --system
gem install sass

# Install PHP
echo -n "Which version do you want to install ?"
echo -n " 1) 5.3"
echo -n " 2) 5.4"
echo -n " 3) 5.5"
echo -n " 4) 5.6"
echo -n " 5) 7.0"
echo -n " 6) 7.1"
read -r php_version

case $php_version in
1 ) brew install php53 ;;
2 ) brew install php54 ;;
3 ) brew install php55 ;;
4 ) brew install php56 ;;
5 ) brew install php70 ;;
6 ) brew install php71 ;;
esac

# Install Composer

if ! test -e /usr/local/bin/composer; then
  fancy_echo "Installing Composer ..."
  expected_signature=$(wget -q -O - https://composer.github.io/installer.sig)
  php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  actual_signature=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")

  if [ "$expected_signature" != "$actual_signature" ]; then
    fancy_echo "ERROR: Invalid installer signature"
    rm composer-setup.php
    echo "Problem with the installer of the composer"
    echo "Composer is not installed ..."
  else
    php composer-setup.php --quiet
    rm composer-setup.php
    mv composer.phar /usr/local/bin/composer
  fi
else
  fancy_echo "Updating Composer ..."
  sudo -H composer self-update
fi

# Configure the git
fancy_echo "Configure your git ..."
echo -n "Your name :"
read -r name
echo -n "Your email : "
read -r email

if ! command git config --get user.name $name > /dev/null ; then
  git config --global user.name "$name"
fi

if ! command git config --get user.email $email > /dev/null ; then
  git config --global user.email $email
fi

git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.del-merged-branch '!git branch --merged | egrep -v "(\*|master|develop)" | xargs git branch -d'
git config --global alias.edit-conflicted-files '!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; $EDITOR `f`'
git config --global alias.add-conflicted-files '!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`'

if ! test -d "$HOME/.ssh"; then
  fancy_echo "Configure your SSH ..."
  ssh-keygen -t rsa -b 4096 -C "$email"
fi

fancy_echo "Configuring your bash ..."

append_to_file "$shell_file" "brew_path=\$(brew --prefix)"
append_to_file "$shell_file" ". \$brew_path/etc/bash_completion"
append_to_file "$shell_file" ". \$brew_path/opt/git/etc/bash_completion.d/git-completion.bash"
append_to_file "$shell_file" ". \$brew_path/opt/git/etc/bash_completion.d/git-prompt.sh"
append_to_file "$shell_file" "if test -e \"\$HOME/.profile\"; then"
append_to_file "$shell_file" "  source \"\$HOME/.profile\""
append_to_file "$shell_file" "fi"

fancy_echo "Configuring your vim ..."

if ! test -f $HOME/.vimrc; then
  touch $HOME/.vimrc
fi

append_to_file "$HOME/.vimrc" "set ruler"

if [ -f "$HOME/.web-development-environment.local" ]; then
  . "$HOME/.web-development-environment.local"
fi

fancy_echo 'All done!'